###############################################################################
#
# IAR C/C++ Compiler V7.10.1.973/W32 for MSP430           10/Sep/2017  19:31:51
# Copyright 1996-2017 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.10
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  E:\Dropbox\NCSU\Current\Code Master\Homework 03\system.c
#    Command line  =  
#        -f C:\Users\JIMCAR~1\AppData\Local\Temp\EWC157.tmp
#        ("E:\Dropbox\NCSU\Current\Code Master\Homework 03\system.c" -lC
#        "E:\Dropbox\NCSU\Current\Code Master\Homework 03\Debug\List" -o
#        "E:\Dropbox\NCSU\Current\Code Master\Homework 03\Debug\Obj" --debug
#        -D__MSP430FR5994__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -Oh --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        E:\Dropbox\NCSU\Current\Code Master\Homework 03\Debug\List\system.lst
#    Object file   =  
#        E:\Dropbox\NCSU\Current\Code Master\Homework 03\Debug\Obj\system.r43
#
###############################################################################

E:\Dropbox\NCSU\Current\Code Master\Homework 03\system.c
      1          //------------------------------------------------------------------------------
      2          //
      3          //  Description: This file contains the System Controls
      4          //
      5          //
      6          //  Jim Carlson
      7          //  Aug 2017
      8          //  Built with IAR Embedded Workbench Version: V7.10.2 (8.0.6.4651)
      9          //------------------------------------------------------------------------------
     10          #include  "msp430.h"
     11          #include  "functions.h"
     12          //------------------------------------------------------------------------------
     13          // System Configurations
     14          
     15          // Tells the compiler to provide the value in reg as an input to an 
     16          // inline assembly block.  Even though the block contains no instructions,
     17          // the compiler may not optimize it away, and is told that the value
     18          // may change and should not be relied upon.
     19          
     20          //inline void enable_interrupts(void) __attribute__((always_inline));

   \                                 In  segment CODE, align 2
     21          void enable_interrupts(void){
   \                     enable_interrupts:
     22            __bis_SR_register(GIE);     // enable interrupts
   \   000000   0343         NOP
   \   000002   32D2         BIS.W   #0x8, SR
     23          //  asm volatile ("eint \n");
     24          }
   \   000004   1001         RETA
     25          
     26          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   enable_interrupts


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  enable_interrupts

 
 6 bytes in segment CODE
 
 6 bytes of CODE memory

Errors: none
Warnings: none
